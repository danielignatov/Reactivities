[{"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"12","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"13","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"15","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"16","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"17","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"19","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx":"20","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"22","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"23","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx":"24","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts":"25","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"26","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts":"27","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"28"},{"size":972,"mtime":1610830752598,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1486,"mtime":1610288511447,"results":"32","hashOfConfig":"30"},{"size":873,"mtime":1610201873399,"results":"33","hashOfConfig":"30"},{"size":974,"mtime":1616415554644,"results":"34","hashOfConfig":"30"},{"size":1061,"mtime":1616415815800,"results":"35","hashOfConfig":"30"},{"size":1579,"mtime":1616415807300,"results":"36","hashOfConfig":"30"},{"size":6716,"mtime":1616415829987,"results":"37","hashOfConfig":"30"},{"size":2133,"mtime":1616414209847,"results":"38","hashOfConfig":"30"},{"size":360,"mtime":1609689031629,"results":"39","hashOfConfig":"30"},{"size":4918,"mtime":1616415089811,"results":"40","hashOfConfig":"30"},{"size":891,"mtime":1610212111865,"results":"41","hashOfConfig":"30"},{"size":298,"mtime":1610201450364,"results":"42","hashOfConfig":"30"},{"size":1756,"mtime":1612176972963,"results":"43","hashOfConfig":"30"},{"size":2474,"mtime":1610211691178,"results":"44","hashOfConfig":"30"},{"size":1811,"mtime":1612176988486,"results":"45","hashOfConfig":"30"},{"size":2056,"mtime":1615663224053,"results":"46","hashOfConfig":"30"},{"size":2493,"mtime":1610211777348,"results":"47","hashOfConfig":"30"},{"size":627,"mtime":1610285650446,"results":"48","hashOfConfig":"30"},{"size":725,"mtime":1610653937113,"results":"49","hashOfConfig":"30"},{"size":736,"mtime":1610654027542,"results":"50","hashOfConfig":"30"},{"size":346,"mtime":1610654514581,"results":"51","hashOfConfig":"30"},{"size":889,"mtime":1610654397962,"results":"52","hashOfConfig":"30"},{"size":1160,"mtime":1615737617118,"results":"53","hashOfConfig":"30"},{"size":358,"mtime":1615653390341,"results":"54","hashOfConfig":"30"},{"size":732,"mtime":1615663999082,"results":"55","hashOfConfig":"30"},{"size":414,"mtime":1616414896488,"results":"56","hashOfConfig":"30"},{"size":707,"mtime":1616415046690,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"i1ztq7",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\index.tsx",[],["116","117"],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["118"],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",["119"],"import { action, makeAutoObservable, computed, configure, runInAction } from 'mobx';\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport agent from '../api/agent';\r\nimport { IActivity } from '../models/activity';\r\nimport { RootStore } from './rootStore';\r\n\r\nconfigure({ enforceActions: 'always' });\r\n\r\nexport default class ActivityStore {\r\n    rootStore: RootStore;\r\n\r\n    constructor(rootStore: RootStore) {\r\n        makeAutoObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    // Observables\r\n    activityRegistry = new Map();\r\n    activity: IActivity | null = null;\r\n    loadingInitial: boolean = false;\r\n    submitting: boolean = false;\r\n    target: string = '';\r\n\r\n    @computed get activitiesByDate() {\r\n        return this.groupActivitiesByDate(Array.from(this.activityRegistry.values()));\r\n    }\r\n\r\n    groupActivitiesByDate(activities: IActivity[]) {\r\n        const sortedActivities = activities.sort(\r\n            (a, b) => a.date.getTime() - b.date.getTime()\r\n        )\r\n\r\n        return Object.entries(sortedActivities.reduce((activities, activity) => {\r\n            const date = activity.date.toISOString().split('T')[0];\r\n\r\n            activities[date]  = activities[date] ? [...activities[date], activity] : [activity];\r\n\r\n            return activities;\r\n        }, {} as {[key: string]: IActivity[]}));\r\n    }\r\n\r\n    @action loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n\r\n        try {\r\n            const activities = await agent.Activities.list();\r\n            runInAction(() => {\r\n                activities.forEach((activity) => {\r\n                    activity.date = new Date(activity.date);\r\n                    this.activityRegistry.set(activity.id, activity);\r\n                });\r\n            });\r\n            //console.log(this.groupActivitiesByDate(activities));\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            runInAction(() => {\r\n                this.loadingInitial = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    @action loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n\r\n        if (activity) {\r\n            this.activity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                runInAction(() => {\r\n                    activity.date = new Date(activity.date);\r\n                    this.activity = activity;\r\n                    this.activityRegistry.set(activity.id, activity);\r\n                    this.loadingInitial = false;\r\n                })\r\n                return activity;\r\n            } catch (error) {\r\n                console.error(error);\r\n            } finally {\r\n                runInAction(() => {\r\n                    this.loadingInitial = false;\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    @action clearActivity = () => {\r\n        this.activity = null;\r\n    }\r\n\r\n    getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    @action createActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.submitting = false;\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            });\r\n            toast.error('Problem submitting data');\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    @action editActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.activity = activity;\r\n                this.submitting = false;\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            });\r\n            toast.error('Problem submitting data');\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    @action deleteActivity = async (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        this.submitting = true;\r\n        this.target = event.currentTarget.name;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n                this.target = '';\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//export default createContext(new ActivityStore());","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",["120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":4,"column":30,"nodeType":"127","messageId":"128","endLine":4,"endColumn":49},{"ruleId":"125","severity":1,"message":"129","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"125","severity":1,"message":"130","line":1,"column":28,"nodeType":"127","messageId":"128","endLine":1,"endColumn":38},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'IActivityFormValues' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'observable' is defined but never used.","no-global-assign","no-unsafe-negation"]