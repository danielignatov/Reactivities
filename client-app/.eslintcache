[{"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"12","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"13","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"15","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"16","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"17","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"19","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx":"20","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"22","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"23","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx":"24","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts":"25","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"26"},{"size":972,"mtime":1610830752598,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":1486,"mtime":1610288511447,"results":"30","hashOfConfig":"28"},{"size":873,"mtime":1610201873399,"results":"31","hashOfConfig":"28"},{"size":926,"mtime":1610202706147,"results":"32","hashOfConfig":"28"},{"size":1048,"mtime":1610207904693,"results":"33","hashOfConfig":"28"},{"size":1567,"mtime":1610287643024,"results":"34","hashOfConfig":"28"},{"size":6702,"mtime":1615737845770,"results":"35","hashOfConfig":"28"},{"size":1797,"mtime":1615664956169,"results":"36","hashOfConfig":"28"},{"size":360,"mtime":1609689031629,"results":"37","hashOfConfig":"28"},{"size":4771,"mtime":1615736026309,"results":"38","hashOfConfig":"28"},{"size":891,"mtime":1610212111865,"results":"39","hashOfConfig":"28"},{"size":298,"mtime":1610201450364,"results":"40","hashOfConfig":"28"},{"size":1756,"mtime":1612176972963,"results":"41","hashOfConfig":"28"},{"size":2474,"mtime":1610211691178,"results":"42","hashOfConfig":"28"},{"size":1811,"mtime":1612176988486,"results":"43","hashOfConfig":"28"},{"size":2056,"mtime":1615663224053,"results":"44","hashOfConfig":"28"},{"size":2493,"mtime":1610211777348,"results":"45","hashOfConfig":"28"},{"size":627,"mtime":1610285650446,"results":"46","hashOfConfig":"28"},{"size":725,"mtime":1610653937113,"results":"47","hashOfConfig":"28"},{"size":736,"mtime":1610654027542,"results":"48","hashOfConfig":"28"},{"size":346,"mtime":1610654514581,"results":"49","hashOfConfig":"28"},{"size":889,"mtime":1610654397962,"results":"50","hashOfConfig":"28"},{"size":1160,"mtime":1615737617118,"results":"51","hashOfConfig":"28"},{"size":358,"mtime":1615653390341,"results":"52","hashOfConfig":"28"},{"size":732,"mtime":1615663999082,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"i1ztq7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\index.tsx",[],["109","110"],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["111"],"import React, { useContext, useEffect, useState } from 'react';\r\n//import { FormEvent } from 'react';\r\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\r\nimport { ActivityFormValues, IActivityFormValues } from '../../../app/models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport SelectInput from '../../../app/common/form/SelectInput';\r\nimport { category } from '../../../app/common/options/categoryOptions';\r\nimport DateInput from '../../../app/common/form/DateInput';\r\nimport { combineDateAndTime } from '../../../app/common/util/util';\r\nimport {combineValidators, composeValidators, hasLengthGreaterThan, isRequired} from 'revalidate';\r\n\r\nconst validate = combineValidators({\r\n    title: isRequired({message: 'The event title is required'}),\r\n    category: isRequired('Category'),\r\n    description: composeValidators(\r\n        isRequired('Description'),\r\n        hasLengthGreaterThan(4)({message: 'Description needs to be at least 5 characters'})\r\n    )(),\r\n    city: isRequired('City'),\r\n    venue: isRequired('Venue'),\r\n    date: isRequired('Date'),\r\n    time: isRequired('Time')\r\n})\r\n\r\ninterface DetailParams {\r\n    id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({ match, history }) => {\r\n    const activityStore = useContext(ActivityStore);\r\n    const {\r\n        createActivity,\r\n        editActivity,\r\n        submitting,\r\n        //activity: initialFormState,\r\n        loadActivity\r\n    } = activityStore;\r\n\r\n    const [activity, setActivity] = useState(new ActivityFormValues());\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (match.params.id) {\r\n            setLoading(true);\r\n            loadActivity(match.params.id)\r\n            .then((activity) => setActivity(new ActivityFormValues(activity)))\r\n            .finally(() => setLoading(false));\r\n        }\r\n    }, [loadActivity, match.params.id])\r\n\r\n    const handleFinalFormSubmit = (values: any) => {\r\n        const dateAndTime = combineDateAndTime(values.date, values.time);\r\n        const {date, time, ...activity} = values;\r\n        activity.date = dateAndTime;\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n        } else {\r\n            editActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <Segment clearing>\r\n                    <FinalForm\r\n                        validate={validate}\r\n                        initialValues={activity}\r\n                        onSubmit={handleFinalFormSubmit}\r\n                        render={({ handleSubmit, invalid, pristine }) => (\r\n                            <Form onSubmit={handleSubmit} loading={loading} >\r\n                                <Field\r\n                                    component={TextInput}\r\n                                    name='title'\r\n                                    placeholder='Title'\r\n                                    value={activity.title} />\r\n                                <Field\r\n                                    component={TextAreaInput}\r\n                                    name='description'\r\n                                    rows={3}\r\n                                    placeholder='Description'\r\n                                    value={activity.description} />\r\n                                <Field\r\n                                    component={SelectInput}\r\n                                    options={category}\r\n                                    name='category'\r\n                                    placeholder='Category'\r\n                                    value={activity.category} />\r\n                                <Form.Group widths='equal'>\r\n                                    <Field\r\n                                        component={DateInput}\r\n                                        name='date'\r\n                                        date={true}\r\n                                        placeholder='Date'\r\n                                        value={activity.date} />\r\n                                    <Field\r\n                                        component={DateInput}\r\n                                        name='time'\r\n                                        time={true}\r\n                                        placeholder='Time'\r\n                                        value={activity.time} />\r\n                                </Form.Group>\r\n                                <Field\r\n                                    component={TextInput}\r\n                                    name='city'\r\n                                    placeholder='City'\r\n                                    value={activity.city} />\r\n                                <Field\r\n                                    component={TextInput}\r\n                                    name='venue'\r\n                                    placeholder='Venue'\r\n                                    value={activity.venue} />\r\n                                <Button \r\n                                disabled={loading || invalid || pristine} \r\n                                loading={submitting} \r\n                                floated='right' \r\n                                positive type='submit' \r\n                                content='Submit' />\r\n                                <Button \r\n                                disabled={loading} \r\n                                onClick={e => {\r\n                                    e.preventDefault();\r\n                                    activity.id\r\n                                      ? history.push(`/activities/${activity.id}`)\r\n                                      : history.push('/activities');\r\n                                  }}\r\n                                floated='right' \r\n                                type='text' \r\n                                content='Cancel' />\r\n                            </Form>\r\n                        )}\r\n                    />\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default observer(ActivityForm)","C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],["112","113"],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts",[],"C:\\Users\\Daniel\\Documents\\GitHub\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":4,"column":30,"nodeType":"120","messageId":"121","endLine":4,"endColumn":49},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'IActivityFormValues' is defined but never used.","Identifier","unusedVar",["124"],["125"],"no-global-assign","no-unsafe-negation"]